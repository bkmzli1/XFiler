<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fluentWpf="clr-namespace:SourceChord.FluentWPF;assembly=FluentWPF"
                    xmlns:localization="clr-namespace:XFiler.GoogleChromeStyle.Localization"
                    xmlns:sdk="clr-namespace:XFiler.SDK;assembly=XFiler.SDK">

    <Style TargetType="ProgressBar" x:Key="DriveSizeProgressBar">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Highlight}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Minimum" Value="0" />
        <Setter Property="Maximum" Value="100" />
        <Setter Property="Height" Value="2" />
        <Setter Property="MinHeight" Value="2" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="MinWidth" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Grid x:Name="Root">
                        <Border x:Name="PART_Track"
                                CornerRadius="1"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <!--<Border.Clip>
                                <RectangleGeometry RadiusX="4" RadiusY="4">
                                    <RectangleGeometry.Rect>
                                        <MultiBinding Converter="{valueConverters:SizeToRectConverter}">
                                            <MultiBinding.Bindings>
                                                <Binding Path="ActualWidth"
                                                         ElementName="PART_Track"/>
                                                <Binding Path="ActualHeight"
                                                         ElementName="PART_Track"/>
                                            </MultiBinding.Bindings>
                                        </MultiBinding>
                                    </RectangleGeometry.Rect>
                                </RectangleGeometry>
                            </Border.Clip>-->

                            <Border x:Name="PART_Indicator"
                                    Margin="-1"
                                    CornerRadius="2"
                                    HorizontalAlignment="Left"
                                    Background="{DynamicResource MahApps.Brushes.AccentBase}" />
                        </Border>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="FolderItemTemplate">
        <Button HorizontalAlignment="Stretch"
                Margin="5"
                MinWidth="120"
                fluentWpf:RevealElement.BorderRadius="8"
                Background="Transparent"
                Cursor="Hand"
                Command="{Binding OpenCommand}"
                CommandParameter="{Binding Route}"
                Style="{DynamicResource ButtonRevealStyle}">
            <StackPanel>
                <Image HorizontalAlignment="Center"
                       Width="36"
                       Height="36"
                       Margin="4"
                       Source="{Binding Icon}" />

                <TextBlock Text="{Binding Name}"
                           FontSize="14"
                           HorizontalAlignment="Center"
                           Margin="16 0 16 8" />
            </StackPanel>
        </Button>
    </DataTemplate>

    <DataTemplate x:Key="DriveItemTemplate">
        <Button HorizontalAlignment="Stretch"
                Margin="5"
                MinWidth="240"
                Cursor="Hand"
                fluentWpf:RevealElement.BorderRadius="8"
                Background="Transparent"
                HorizontalContentAlignment="Stretch"
                Command="{Binding OpenCommand}"
                CommandParameter="{Binding Route}"
                Style="{DynamicResource ButtonRevealStyle}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Image HorizontalAlignment="Center"
                       Width="36"
                       Height="36"
                       Margin="4"
                       Source="{Binding Icon}" />

                <Grid Grid.Column="1"
                      Margin="4 10 6 10"
                      VerticalAlignment="Center">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <TextBlock Text="{Binding Name}"
                               FontSize="14"
                               HorizontalAlignment="Center"
                               Margin="16 0 16 8" />

                    <ProgressBar Grid.Row="1"
                                 Style="{StaticResource DriveSizeProgressBar}"
                                 Value="{Binding UsedPercentage}" />

                    <StackPanel Grid.Row="2" Orientation="Horizontal"
                                Margin="0 3">

                        <TextBlock FontSize="12"
                                   Text="{Binding TotalFreeSpace, Converter={sdk:FileSizeToStringConverter}}" />
                        <TextBlock FontSize="12"
                                   Margin="3 0"
                                   Text="{x:Static localization:Strings.MyComputer_FreeFromText}" />
                        <TextBlock FontSize="12"
                                   Text="{Binding TotalSize, Converter={sdk:FileSizeToStringConverter}}" />
                    </StackPanel>
                </Grid>

            </Grid>
        </Button>
    </DataTemplate>

    <Style x:Key="FolderItemsControlStyle"
           TargetType="ItemsControl">
        <Setter Property="ItemTemplate" Value="{DynamicResource FolderItemTemplate}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SelectPresenterListBoxItemStyle"
           TargetType="ListBoxItem">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Text}" />
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding HorizontalContentAlignment, Mode=OneWay, FallbackValue=Stretch, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="RenderOptions.ClearTypeHint"
                Value="{Binding Path=(RenderOptions.ClearTypeHint), Mode=OneWay, FallbackValue=Auto, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid x:Name="RootGrid"
                          Margin="2"
                          Background="Transparent"
                          RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}">
                        <Border x:Name="Border"
                                CornerRadius="8"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Grid Margin="{TemplateBinding BorderThickness}">
                            <ContentPresenter x:Name="ContentPresenter"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverSelectedForegroundBrush), Mode=OneWay}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverForegroundBrush), Mode=OneWay}" />
                        </MultiTrigger>

                        <Trigger Property="mah:ItemHelper.IsMouseLeftButtonPressed" Value="True">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.MouseLeftButtonPressedBackgroundBrush), Mode=OneWay}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.MouseLeftButtonPressedForegroundBrush), Mode=OneWay}" />
                        </Trigger>
                        <Trigger Property="mah:ItemHelper.IsMouseRightButtonPressed" Value="True">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.MouseRightButtonPressedBackgroundBrush), Mode=OneWay}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.MouseRightButtonPressedForegroundBrush), Mode=OneWay}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                            <Setter TargetName="RootGrid" Property="Background"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background, Mode=OneWay}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment"
                Value="{Binding VerticalContentAlignment, Mode=OneWay, FallbackValue=Center, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="mah:ItemHelper.ActiveSelectionBackgroundBrush"
                Value="{DynamicResource MahApps.Brushes.Accent}" />
        <Setter Property="mah:ItemHelper.ActiveSelectionForegroundBrush"
                Value="{DynamicResource MahApps.Brushes.Selected.Foreground}" />
        <Setter Property="mah:ItemHelper.DisabledForegroundBrush" Value="{DynamicResource MahApps.Brushes.Gray}" />
        <Setter Property="mah:ItemHelper.DisabledSelectedBackgroundBrush"
                Value="{DynamicResource MahApps.Brushes.Gray7}" />
        <Setter Property="mah:ItemHelper.DisabledSelectedForegroundBrush"
                Value="{DynamicResource MahApps.Brushes.Selected.Foreground}" />
        <Setter Property="mah:ItemHelper.HoverBackgroundBrush" Value="{DynamicResource MahApps.Brushes.Accent3}" />
        <Setter Property="mah:ItemHelper.HoverForegroundBrush" Value="{DynamicResource MahApps.Brushes.Text}" />
        <Setter Property="mah:ItemHelper.HoverSelectedBackgroundBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
        <Setter Property="mah:ItemHelper.HoverSelectedForegroundBrush"
                Value="{DynamicResource MahApps.Brushes.Selected.Foreground}" />
        <Setter Property="mah:ItemHelper.SelectedBackgroundBrush" Value="{DynamicResource MahApps.Brushes.Accent2}" />
        <Setter Property="mah:ItemHelper.SelectedForegroundBrush"
                Value="{DynamicResource MahApps.Brushes.Selected.Foreground}" />

    </Style>


</ResourceDictionary>