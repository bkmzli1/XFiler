<UserControl x:Class="XFiler.Base.GridFilesPresenter"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:dragablz="http://dragablz.net/winfx/xaml/dragablz"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:base="clr-namespace:XFiler.Base"
             xmlns:loc="clr-namespace:XFiler.Base.Localization"
             xmlns:controls="clr-namespace:XFiler.Controls;assembly=XFiler.Controls"
             xmlns:themes="clr-namespace:XFiler.SDK.Themes;assembly=XFiler.SDK"
             xmlns:sdk="clr-namespace:XFiler.SDK;assembly=XFiler.SDK"
             xmlns:dd="urn:gong-wpf-dragdrop"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800"

             DataContext="{Binding FilesPresenter}">

    <UserControl.Resources>

        <sdk:NativeContextMenuLoaderReference x:Key="NativeContextMenuLoader"
                                              NativeContextMenuLoader="{Binding NativeContextMenuLoader}" />

        <CollectionViewSource x:Key="GroupedCollectionViewSource"
                              Source="{Binding DirectoriesAndFiles}">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="Group" />
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>

        <sdk:ComparerReference x:Key="NaturalComparer"
                               Comparer="{Binding NaturalStringComparer}" />

        <sdk:CommandReference x:Key="OpenCommand"
                              Command="{Binding DataContext.OpenCommand, 
                                                RelativeSource={RelativeSource AncestorType={x:Type base:GridFilesPresenter}}}" />

        <sdk:CommandReference x:Key="AddToBookmarksCommand"
                              Command="{Binding SelectedItem.AddBookmarkCommand, 
                                                RelativeSource={RelativeSource AncestorType={x:Type dragablz:TabablzControl}}}" />

        <sdk:CommandReference x:Key="OpenInNativeExplorerCommand"
                              Command="{Binding DataContext.OpenInNativeExplorerCommand, 
                                                RelativeSource={RelativeSource AncestorType={x:Type base:GridFilesPresenter}}}" />

        <sdk:CommandReference x:Key="OpenNewTabCommand"
                              Command="{Binding DataContext.OpenNewTabCommand, 
                                                RelativeSource={RelativeSource AncestorType={x:Type base:GridFilesPresenter}}}"
                              CommandParameter="{Binding DataContext,
                                                        RelativeSource={RelativeSource AncestorType={x:Type dragablz:TabablzControl}}}" />

        <sdk:CommandReference x:Key="OpenNewWindowCommand"
                              Command="{Binding DataContext.OpenNewWindowCommand, 
                                                RelativeSource={RelativeSource AncestorType={x:Type base:GridFilesPresenter}}}" />

        <sdk:CommandReference x:Key="PasteCommand"
                              Command="{Binding DataContext.PasteCommand, 
                                                RelativeSource={RelativeSource AncestorType={x:Type base:GridFilesPresenter}}}" />

        <sdk:CommandReference x:Key="CutCommand"
                              Command="{Binding DataContext.CutCommand, 
                                                RelativeSource={RelativeSource AncestorType={x:Type base:GridFilesPresenter}}}" />

        <sdk:CommandReference x:Key="DeleteCommand"
                              Command="{Binding DataContext.DeleteCommand, 
                                                RelativeSource={RelativeSource AncestorType={x:Type base:GridFilesPresenter}}}" />

        <sdk:CommandReference x:Key="CopyCommand"
                              Command="{Binding DataContext.CopyCommand, 
                                                RelativeSource={RelativeSource AncestorType={x:Type base:GridFilesPresenter}}}" />

        <sdk:CommandReference x:Key="RenameCommand"
                              Command="{Binding DataContext.RenameCommand, 
                                                RelativeSource={RelativeSource AncestorType={x:Type base:GridFilesPresenter}}}" />

        <sdk:CommandReference x:Key="StartRenameCommand"
                              Command="{Binding DataContext.StartRenameCommand, 
                                                RelativeSource={RelativeSource AncestorType={x:Type base:GridFilesPresenter}}}" />
    </UserControl.Resources>

    <controls:RectSelectDataGrid ItemsSource="{Binding Source={StaticResource GroupedCollectionViewSource}}"

                                 x:Name="RectSelectDataGrid"

                                 Style="{DynamicResource {x:Static themes:ResourceKeys.RectSelectDataGridStyle}}"
                                 Background="Transparent"

                                 AutoGenerateColumns="False"

                                 HeadersVisibility="Column"
                                 CanUserAddRows="False"
                                 CanUserDeleteRows="False"
                                 CanUserSortColumns="True"
                                 CanUserResizeColumns="True"
                                 CanUserResizeRows="False"
                                 SelectionMode="Extended"
                                 SelectionUnit="FullRow"

                                 dd:DragDrop.DropScrollingMode="VerticalOnly"
                                 dd:DragDrop.IsDragSource="True"
                                 dd:DragDrop.IsDropTarget="True"
                                 dd:DragDrop.UseDefaultEffectDataTemplate="True"
                                 dd:DragDrop.DragDirectlySelectedOnly="True"
                                 dd:DragDrop.UseDefaultDragAdorner="True"

                                 dd:DragDrop.DropHandler="{Binding DropTarget}"
                                 dd:DragDrop.DragHandler="{Binding DragSource}"

                                 VirtualizingPanel.IsVirtualizing="True"
                                 VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                                 VirtualizingPanel.VirtualizationMode="Recycling"
                                 EnableColumnVirtualization="False"
                                 EnableRowVirtualization="True"

                                 base:CustomSortBehaviour.AllowCustomSort="True">

        <DataGrid.Resources>
            <sdk:CommandReference x:Key="OpenManyItemsNewTabCommand"
                                  Command="{Binding DataContext.OpenNewTabCommand, 
                                                RelativeSource={RelativeSource AncestorType={x:Type base:GridFilesPresenter}}}">
                <sdk:CommandReference.CommandParameter>
                    <MultiBinding Converter="{sdk:CloneParamsConverter}">
                        <Binding Path="DataContext"
                                 RelativeSource="{RelativeSource AncestorType={x:Type dragablz:TabablzControl}}" />
                        <Binding Path="SelectedItems"
                                 RelativeSource="{RelativeSource AncestorType={x:Type DataGrid}}" />

                    </MultiBinding>
                </sdk:CommandReference.CommandParameter>
            </sdk:CommandReference>

            <sdk:CommandReference x:Key="OpenManyItemsNewWindowCommand"
                                  Command="{Binding DataContext.OpenNewWindowCommand, 
                                                RelativeSource={RelativeSource AncestorType={x:Type base:GridFilesPresenter}}}"
                                  CommandParameter="{Binding SelectedItems, RelativeSource={RelativeSource AncestorType={x:Type controls:RectSelectDataGrid}}}" />

            <sdk:CommandReference x:Key="CutManyCommand"
                                  Command="{Binding DataContext.CutCommand, 
                                                RelativeSource={RelativeSource AncestorType={x:Type base:GridFilesPresenter}}}"
                                  CommandParameter="{Binding SelectedItems, RelativeSource={RelativeSource AncestorType={x:Type controls:RectSelectDataGrid}}}" />

            <sdk:CommandReference x:Key="CopyManyCommand"
                                  Command="{Binding DataContext.CopyCommand, 
                                                RelativeSource={RelativeSource AncestorType={x:Type base:GridFilesPresenter}}}"
                                  CommandParameter="{Binding SelectedItems, RelativeSource={RelativeSource AncestorType={x:Type controls:RectSelectDataGrid}}}" />

            <sdk:CommandReference x:Key="DeleteManyCommand"
                                  Command="{Binding DataContext.DeleteCommand, 
                                                RelativeSource={RelativeSource AncestorType={x:Type base:GridFilesPresenter}}}"
                                  CommandParameter="{Binding SelectedItems, RelativeSource={RelativeSource AncestorType={x:Type controls:RectSelectDataGrid}}}" />

            <sdk:CommandReference x:Key="DeleteManyPermanentlyCommand"
                                  Command="{Binding DataContext.DeletePermanentlyCommand, 
                                                RelativeSource={RelativeSource AncestorType={x:Type base:GridFilesPresenter}}}"
                                  CommandParameter="{Binding SelectedItems, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />

            <sdk:ObjectReference x:Key="SelectedItemsContainer"
                                 Value="{Binding SelectedItems, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />

            <ContextMenu x:Key="DirectoryContextMenu">
                <b:Interaction.Behaviors>
                    <sdk:RegistryContextMenuBehavior NativeContextMenuLoader="{StaticResource NativeContextMenuLoader}"
                                                     FileInfoModel="{Binding }" />
                </b:Interaction.Behaviors>
                <MenuItem Header="{x:Static loc:Strings.ContextMenu_Open}"
                          Command="{StaticResource OpenCommand}"
                          CommandParameter="{Binding}" />
                <MenuItem Header="{x:Static loc:Strings.ContextMenu_OpenInNewTab}"
                          Command="{StaticResource  OpenNewTabCommand}"
                          CommandParameter="{Binding}" />
                <MenuItem Header="{x:Static loc:Strings.ContextMenu_OpenInNewWindow}"
                          Command="{StaticResource  OpenNewWindowCommand}"
                          CommandParameter="{Binding}" />
                <Separator />

                <MenuItem Header="{x:Static loc:Strings.ContextMenu_OpenInNativeExplorer}"
                          Command="{StaticResource OpenInNativeExplorerCommand}"
                          CommandParameter="{Binding }"
                          sdk:RegistryContextMenuBehavior.RootItem="True" />

                <Separator />

                <MenuItem Header="{x:Static loc:Strings.ContextMenu_AddToBookmarks}"
                          Command="{StaticResource AddToBookmarksCommand}"
                          CommandParameter="{Binding }" />

                <Separator />

                <MenuItem Header="{x:Static loc:Strings.ContextMenu_Rename}"
                          Command="{StaticResource StartRenameCommand}"
                          CommandParameter="{Binding}"
                          InputGestureText="F2" />

                <Separator />

                <MenuItem Header="{x:Static loc:Strings.ContextMenu_Cut}"
                          Command="{StaticResource CutCommand}"
                          CommandParameter="{Binding}"
                          InputGestureText="Ctrl + X" />

                <MenuItem Header="{x:Static loc:Strings.ContextMenu_Copy}"
                          Command="{StaticResource CopyCommand}"
                          CommandParameter="{Binding}"
                          InputGestureText="Ctrl + C" />

                <MenuItem Header="{x:Static loc:Strings.ContextMenu_Paste}"
                          Command="{StaticResource PasteCommand}"
                          CommandParameter="{Binding}"
                          InputGestureText="Ctrl + V" />

                <Separator />

                <MenuItem Header="{x:Static loc:Strings.ContextMenu_Delete}"
                          Command="{StaticResource DeleteCommand}"
                          CommandParameter="{Binding}"
                          InputGestureText="Del" />

            </ContextMenu>

            <ContextMenu x:Key="FileContextMenu">
                <b:Interaction.Behaviors>
                    <sdk:RegistryContextMenuBehavior NativeContextMenuLoader="{StaticResource NativeContextMenuLoader}"
                                                     FileInfoModel="{Binding }" />
                </b:Interaction.Behaviors>
                <MenuItem Header="{x:Static loc:Strings.ContextMenu_Open}"
                          Command="{StaticResource OpenCommand}"
                          CommandParameter="{Binding}" />
                <MenuItem Header="{x:Static loc:Strings.ContextMenu_OpenInNewTab}"
                          Command="{StaticResource  OpenNewTabCommand}"
                          CommandParameter="{Binding}" />
                <MenuItem Header="{x:Static loc:Strings.ContextMenu_OpenInNewWindow}"
                          Command="{StaticResource  OpenNewWindowCommand}"
                          CommandParameter="{Binding}" />

                <Separator sdk:RegistryContextMenuBehavior.RootItem="True" />

                <Separator />

                <MenuItem Header="{x:Static loc:Strings.ContextMenu_AddToBookmarks}"
                          Command="{StaticResource AddToBookmarksCommand}"
                          CommandParameter="{Binding }" />

                <Separator />

                <MenuItem Header="{x:Static loc:Strings.ContextMenu_Rename}"
                          Command="{StaticResource StartRenameCommand}"
                          CommandParameter="{Binding}"
                          InputGestureText="F2" />

                <Separator />

                <MenuItem Header="{x:Static loc:Strings.ContextMenu_Cut}"
                          Command="{StaticResource CutCommand}"
                          CommandParameter="{Binding}"
                          InputGestureText="Ctrl + X" />

                <MenuItem Header="{x:Static loc:Strings.ContextMenu_Copy}"
                          Command="{StaticResource CopyCommand}"
                          CommandParameter="{Binding}"
                          InputGestureText="Ctrl + C" />

                <Separator />

                <MenuItem Header="{x:Static loc:Strings.ContextMenu_Delete}"
                          Command="{StaticResource DeleteCommand}"
                          CommandParameter="{Binding}"
                          InputGestureText="Del" />
            </ContextMenu>

            <ContextMenu x:Key="ManyItemsContextMenu">
                <b:Interaction.Behaviors>
                    <sdk:RegistryContextMenuBehavior NativeContextMenuLoader="{StaticResource NativeContextMenuLoader}"
                                                     SelectedItemsContainer="{StaticResource SelectedItemsContainer}" />
                </b:Interaction.Behaviors>
                <MenuItem Header="{x:Static loc:Strings.ContextMenu_OpenInNewTab}"
                          Command="{StaticResource  OpenManyItemsNewTabCommand}" />

                <MenuItem Header="{x:Static loc:Strings.ContextMenu_OpenInNewWindow}"
                          Command="{StaticResource  OpenManyItemsNewWindowCommand}" />

                <Separator sdk:RegistryContextMenuBehavior.RootItem="True" />

                <Separator />

                <MenuItem Header="{x:Static loc:Strings.ContextMenu_Cut}"
                          Command="{StaticResource CutManyCommand}"
                          InputGestureText="Ctrl + X" />

                <MenuItem Header="{x:Static loc:Strings.ContextMenu_Copy}"
                          Command="{StaticResource CopyManyCommand}"
                          InputGestureText="Ctrl + C" />

                <Separator />

                <MenuItem Header="{x:Static loc:Strings.ContextMenu_Delete}"
                          Command="{StaticResource DeleteManyCommand}"
                          InputGestureText="Del" />
            </ContextMenu>

        </DataGrid.Resources>

        <DataGrid.InputBindings>
            <KeyBinding Command="{StaticResource StartRenameCommand}"
                        CommandParameter="{Binding SelectedItems,RelativeSource={RelativeSource AncestorType=DataGrid}}"
                        Key="F2" />
            <KeyBinding Command="{StaticResource CutManyCommand}"
                        Modifiers="Control" Key="X" />
            <KeyBinding Command="{StaticResource DeleteManyCommand}"
                        Key="Delete" />
            <KeyBinding Command="{StaticResource DeleteManyPermanentlyCommand}"
                        Modifiers="Shift" Key="Delete" />
            <KeyBinding Command="{StaticResource CopyManyCommand}"
                        Modifiers="Control" Key="C" />
            <KeyBinding Command="{StaticResource PasteCommand}"
                        Modifiers="Control" Key="V">
                <KeyBinding.CommandParameter>
                    <MultiBinding Converter="{sdk:CloneParamsConverter}">
                        <Binding Path="SelectedItem"
                                 RelativeSource="{RelativeSource AncestorType={x:Type DataGrid}}" />
                        <Binding Path="DataContext"
                                 RelativeSource="{RelativeSource AncestorType={x:Type DataGrid}}" />
                    </MultiBinding>
                </KeyBinding.CommandParameter>
            </KeyBinding>
        </DataGrid.InputBindings>

        <DataGrid.RowStyle>
            <Style TargetType="{x:Type DataGridRow}">
                <Setter Property="Margin" Value="0" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
                <Setter Property="ValidationErrorTemplate"
                        Value="{StaticResource MahApps.Templates.DataGridRow.ValidationError}" />
                <Setter Property="mah:DataGridHelper.CellPadding"
                        Value="{Binding Path=(mah:DataGridHelper.CellPadding), FallbackValue=0, TargetNullValue=0, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                <Setter Property="mah:DataGridHelper.SelectionUnit"
                        Value="{Binding Path=SelectionUnit, FallbackValue={x:Static DataGridSelectionUnit.FullRow}, TargetNullValue={x:Static DataGridSelectionUnit.FullRow}, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                <EventSetter Event="MouseDoubleClick" Handler="Row_DoubleClick"/>
                <Setter Property="ContextMenu" Value="{StaticResource DirectoryContextMenu}" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridRow}">
                            <Border x:Name="DGR_Border"
                                    HorizontalAlignment="Left"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <Border.InputBindings>
                                    <MouseBinding MouseAction="MiddleClick"
                                                  Command="{StaticResource OpenNewTabCommand}"
                                                  CommandParameter="{Binding}" />
                                </Border.InputBindings>
                                <SelectiveScrollingGrid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>

                                    <DataGridCellsPresenter Grid.Column="1"
                                                            ItemsPanel="{TemplateBinding ItemsPanel}"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                                    <DataGridDetailsPresenter Grid.Row="1"
                                                              Grid.Column="1"
                                                              SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=AreRowDetailsFrozen, FallbackValue={x:Static SelectiveScrollingOrientation.Both}, TargetNullValue={x:Static SelectiveScrollingOrientation.Both}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}}"
                                                              Visibility="{TemplateBinding DetailsVisibility}" />

                                    <DataGridRowHeader Grid.Row="0"
                                                       Grid.RowSpan="2"
                                                       Grid.Column="0"
                                                       SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                                       Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HeadersVisibility, FallbackValue={x:Static Visibility.Visible}, TargetNullValue={x:Static Visibility.Visible}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Row}}" />
                                </SelectiveScrollingGrid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>

                    <DataTrigger Value="True"
                                 Binding="{Binding DataContext, RelativeSource={RelativeSource Self}, Converter={base:IsFileModelConverter}}">
                        <Setter Property="ContextMenu" Value="{StaticResource FileContextMenu}" />
                    </DataTrigger>
                    <DataTrigger Value="True"
                                 Binding="{Binding IsManyItemsSelected,
                        RelativeSource={RelativeSource AncestorType={x:Type controls:RectSelectDataGrid}}}">
                        <Setter Property="ContextMenu" Value="{StaticResource ManyItemsContextMenu}" />
                    </DataTrigger>

                    <Trigger Property="IsNewItem" Value="True">
                        <Setter Property="Margin"
                                Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=NewItemMargin}" />
                    </Trigger>

                    <!--  IsSelected  -->
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="mah:DataGridHelper.SelectionUnit" Value="FullRow" />
                            <Condition Property="IsSelected" Value="True" />
                        </MultiTrigger.Conditions>
                        <Setter Property="Background"
                                Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Background}" />
                        <Setter Property="BorderBrush"
                                Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.BorderBrush}" />
                        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Text}" />
                    </MultiTrigger>

                    <!--  IsSelected and Selector.IsSelectionActive  -->
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="mah:DataGridHelper.SelectionUnit" Value="FullRow" />
                            <Condition Property="IsSelected" Value="True" />
                            <Condition Property="Selector.IsSelectionActive" Value="False" />
                        </MultiTrigger.Conditions>
                        <Setter Property="Background"
                                Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Background.Inactive}" />
                        <Setter Property="BorderBrush"
                                Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.BorderBrush.Inactive}" />
                        <Setter Property="Foreground"
                                Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Text.Inactive}" />
                    </MultiTrigger>

                    <!--  IsMouseOver  -->
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="mah:DataGridHelper.SelectionUnit" Value="FullRow" />
                            <Condition Property="IsMouseOver" Value="True" />
                        </MultiTrigger.Conditions>
                        <Setter Property="Background"
                                Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Background.MouseOver}" />
                        <Setter Property="BorderBrush"
                                Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.BorderBrush.MouseOver}" />
                        <Setter Property="Foreground"
                                Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Text.MouseOver}" />
                    </MultiTrigger>

                    <!--  IsEnabled  -->
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="mah:DataGridHelper.SelectionUnit" Value="FullRow" />
                            <Condition Property="IsEnabled" Value="False" />
                        </MultiTrigger.Conditions>
                        <Setter Property="Foreground"
                                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                    </MultiTrigger>

                    <!--  IsEnabled and IsSelected  -->
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="mah:DataGridHelper.SelectionUnit" Value="FullRow" />
                            <Condition Property="IsEnabled" Value="False" />
                            <Condition Property="IsSelected" Value="True" />
                        </MultiTrigger.Conditions>
                        <Setter Property="Background"
                                Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Background.Disabled}" />
                        <Setter Property="BorderBrush"
                                Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.BorderBrush.Disabled}" />
                        <Setter Property="Foreground"
                                Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Text.Disabled}" />
                    </MultiTrigger>

                </Style.Triggers>
            </Style>

        </DataGrid.RowStyle>

        <DataGrid.GroupStyle>
            <GroupStyle>
                <GroupStyle.ContainerStyle>
                    <Style TargetType="{x:Type GroupItem}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type GroupItem}">
                                    <Grid>
                                        <Expander IsExpanded="True"
                                                  Foreground="White"
                                                  x:Name="Expander">
                                            <Expander.Header>
                                                <TextBlock Text="{Binding Name}"
                                                           FontSize="16" />
                                            </Expander.Header>

                                            <ItemsPresenter />
                                        </Expander>

                                        <ItemsPresenter x:Name="Presenter"
                                                        Visibility="Collapsed" />
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <DataTrigger Binding="{Binding Name}"
                                                     Value="{x:Null}">
                                            <Setter TargetName="Presenter" Property="Visibility"
                                                    Value="Visible" />
                                            <Setter TargetName="Expander" Property="Visibility"
                                                    Value="Collapsed" />
                                        </DataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </GroupStyle.ContainerStyle>
            </GroupStyle>
        </DataGrid.GroupStyle>

        <DataGrid.Columns>
            <DataGridTemplateColumn Width="20"
                                    MinWidth="20"
                                    MaxWidth="20">
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <Image MaxWidth="18"
                               MaxHeight="18"
                               x:Name="Bd"
                               Source="{Binding Icon}" />
                        <DataTemplate.Triggers>
                            <DataTrigger Value="True"
                                         Binding="{Binding IsCutted}">
                                <Setter TargetName="Bd" Property="Opacity" Value="0.5" />
                            </DataTrigger>
                            <DataTrigger Value="True"
                                         Binding="{Binding IsSystem}">
                                <Setter TargetName="Bd" Property="Opacity" Value="0.5" />
                            </DataTrigger>
                            <DataTrigger Value="True"
                                         Binding="{Binding IsHidden}">
                                <Setter TargetName="Bd" Property="Opacity" Value="0.5" />
                            </DataTrigger>
                            <DataTrigger Value="True"
                                         Binding="{Binding IsCopyProcess}">
                                <Setter TargetName="Bd" Property="Opacity" Value="0.3" />
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>
            <DataGridTemplateColumn Header="{x:Static loc:Strings.Presenters_Table_NameRow}"
                                    Width="250"
                                    CanUserSort="True"
                                    SortMemberPath="Name"
                                    base:CustomSortBehaviour.CustomSorter="{StaticResource NaturalComparer}">
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <controls:EditBox x:Name="TextBlock"
                                          Style="{DynamicResource TreeViewEditBox}"
                                          Background="Transparent"
                                          DisplayTextForegroundBrush="White"
                                          Foreground="White"
                                          IsEditableOnDoubleClick="True"
                                          IsReadOnly="False"
                                          MinimumClickTime="500"
                                          MaximumClickTime="1200"
                                          Focusable="True"
                                          RenameCommand="{StaticResource RenameCommand}"
                                          RenameCommandParameter="{Binding}"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Left"
                                          Margin="5 0"
                                          DisplayText="{Binding Name, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                          Text="{Binding Name, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>

            </DataGridTemplateColumn>
            <DataGridTextColumn Header="{x:Static loc:Strings.Presenters_Table_DateOfChangeRow}"
                                IsReadOnly="True"
                                Binding="{Binding ChangeDateTime, StringFormat=g}" />
            <DataGridTextColumn Header="{x:Static loc:Strings.Presenters_Table_TypeRow}"
                                IsReadOnly="True"
                                Binding="{Binding Type}" />
            <DataGridTextColumn Header="{x:Static loc:Strings.Presenters_Table_SizeRow}"
                                IsReadOnly="True"
                                Binding="{Binding Size, Converter={sdk:FileSizeToStringConverter}}" />
        </DataGrid.Columns>

    </controls:RectSelectDataGrid>

</UserControl>